% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitMoveMatrix.R
\name{fitMoveMatrix}
\alias{fitMoveMatrix}
\title{Simulation of resident moving matrix}
\usage{
fitMoveMatrix(
  Mij_real,
  region_IDs,
  population,
  lambda_sig_ini = 10,
  alpha_F = 1,
  alpha_lambda_sig = 1,
  fit_fi = TRUE,
  fit_lambda = FALSE,
  draw_plot = TRUE,
  threshold = 1e-06
)
}
\arguments{
\item{Mij_real}{Real movement data matrix.}

\item{region_IDs}{A character vector that contains labels or names of each region.}

\item{population}{A numeric vector that contains population of each region.}

\item{lambda_sig_ini}{Initial sigmoid lambda value. Default is 10.}

\item{alpha_F}{The descent speed parameter of leaving probability. Default is 1.}

\item{alpha_lambda_sig}{The descent speed parameter of sigmoid lambda. Default is 1.}

\item{fit_fi}{Whether the leaving probability should be fitted. Default is TRUE.}

\item{fit_lambda}{Whether lambda should be fitted. Default is FALSE.}

\item{draw_plot}{Whether plots will be made at the beginning and end of fitting. Default is TRUE.}

\item{threshold}{The threshold that determines the stop timing of descent process. 
The process will be stopped when the differences of RMS between two descents are smaller than this threshold.
Default is 1e-6.}
}
\value{
A list that contains four components: \itemize{  
\item{Fi}{: the vector that contains the probability of a resident leaves his/her residence region.} 
\item{Sij}{: the matrix that contains the probability of each region a resident will go when he/she leaves his/her residence region.} 
\item{Mij_simu}{: the simulated movement matrix.}
\item{lambda_sig}{: the sigmoid lambda value.}
}
}
\description{
A tool that uses movement data to find a local optimum residents moving matrix via gradient descent method.
}
\details{
test detail
}
\examples{
location_list = c("loc1", "loc2", "loc3", "loc4", "loc5")
loc_N = seq(1000, 9000, 2000)
iniLoc = "loc3"
movMat = t(matrix(c(990, 3, 4, 1, 2, 
                    23, 2911, 41, 17, 8, 
                    44, 102, 4201, 650, 3, 
                    2, 387, 1446, 4683, 482, 
                    79, 521, 482, 901, 7017), ncol = 5))
result = fitMoveMatrix(movMat, location_list, loc_N, alpha_F = 0.1)
}
\keyword{descent}
\keyword{gradient}
\keyword{model}
